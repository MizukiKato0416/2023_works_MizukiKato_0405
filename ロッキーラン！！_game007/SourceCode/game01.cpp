//================================================
//ゲーム01処理
//Authore: UENOYAMA TAIGA
//================================================
#include "renderer.h"
#include "game01.h"
#include "manager.h"
#include "input_keyboard.h"
#include "input_pad_x.h"
#include "player.h"
#include "scene3D.h"
#include "texture.h"
#include "meshfield.h"
#include "meshsphere.h"
#include "fade.h"
#include "model_single.h"
#include "score.h"
#include "tutorial.h"
#include "ui.h"
#include "timer.h"
#include "pause.h"
#include  "sound.h"
//================================================
//静的メンバ変数宣言
//================================================

//================================================
//デフォルトコンストラクタ
//================================================
CGame01::CGame01(int nPriority)
{
	memset(&m_apPlayer, NULL, sizeof(m_apPlayer));
	m_nNumScene2D = 0;
	m_nSelect = 0;
	m_pMeshField = NULL;
	m_pMeshSphere = NULL;
	m_pScene3D = NULL;
	m_phase = GAME01_PHASE_NONE;
	m_nFrame = 0;
	memset(&m_apModelSingle, NULL, sizeof(m_apModelSingle));
	m_pTime = NULL;
	m_pPause = NULL;
	m_nTime = 0;
	m_bGame = false;
	m_icePattern = ICE_FLOOR_PATTERN_NONE;
	for (int nNum = 0; nNum < GAME_MAX_UI_NUM; nNum++)
	{
		m_apUi[nNum] = NULL;
	}
}

//================================================
//オーバーロードされたコンストラクタ
//================================================


//================================================
//デストラクタ
//================================================
CGame01::~CGame01()
{

}

//================================================
//初期化処理
//================================================
HRESULT CGame01::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	int nIcePattern = 0;

	nIcePattern = rand() % 3 + 1;
	m_icePattern = (ICE_FLOOR_PATTERN)nIcePattern;
	m_nNumScene2D = 0;
	m_nSelect = 0;
	m_phase = GAME01_PHASE_NONE;
	m_nFrame = 0;
	m_bGame = false;

	//メッシュスフィアの生成
	m_pMeshSphere = CMeshSphere::Create(D3DXVECTOR3(0.0f, -200.0f, 0.0f), D3DXVECTOR3(GAME_SEPARATE_MESH, GAME_SEPARATE_MESH, GAME_SEPARATE_MESH), D3DXVECTOR3(0.0f, 0.0f, 0.0f), 128, 32);
	m_pMeshSphere->BindTexture(CManager::GetTexture()->GetTexture(CTexture::TEX_TYPE_SKY));

	//メッシュフィールドの生成
	m_pMeshField = CMeshField::Create(D3DXVECTOR3(0.0f, -200.0f, 0.0f), D3DXVECTOR3(GAME_SEPARATE_MESH, 0.0f, GAME_SEPARATE_MESH), D3DXVECTOR3(0.0f, 0.0f, 0.0f), 2, 2);
	m_pMeshField->BindTexture(CManager::GetTexture()->GetTexture(CTexture::TEX_TYPE_TILE));

	//プレイヤーナンバー生成
	m_apUi[1] = CUi::Create(D3DXVECTOR3(GAME_1P_TEX_POS_X, GAME_PLAYERNUMBER_TEX_POS_Y, 0.0f),
		D3DXVECTOR3(GAME_PLAYERNUMBER_TEX_SIZE_X, GAME_PLAYERNUMBER_TEX_SIZE_Y, 0.0f), PRIORITY_UI, CUi::UI_TYPE_PLAYER_1P);	//1P表示
	m_apUi[2] = CUi::Create(D3DXVECTOR3(GAME_2P_TEX_POS_X, GAME_PLAYERNUMBER_TEX_POS_Y, 0.0f),
		D3DXVECTOR3(GAME_PLAYERNUMBER_TEX_SIZE_X, GAME_PLAYERNUMBER_TEX_SIZE_Y, 0.0f), PRIORITY_UI, CUi::UI_TYPE_PLAYER_2P);	//2P表示


	//スタート床の生成
	m_apModelSingle[0] = CModelSingle::Create(D3DXVECTOR3(0.0f, 0.0f, GAME_START_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_START_FLOOR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//足場の生成
#if(1)
	//1列目
	m_apModelSingle[1] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_1ST_POS_X                           , 0.0f, GAME_SCAFFOLD_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[2] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_1ST_POS_X + GAME_SCAFFOLD_MOVE_X    , 0.0f, GAME_SCAFFOLD_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[3] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_1ST_POS_X + GAME_SCAFFOLD_MOVE_X * 2, 0.0f, GAME_SCAFFOLD_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[4] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_1ST_POS_X + GAME_SCAFFOLD_MOVE_X * 3, 0.0f, GAME_SCAFFOLD_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[5] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_1ST_POS_X + GAME_SCAFFOLD_MOVE_X * 4, 0.0f, GAME_SCAFFOLD_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	//2列目
	m_apModelSingle[6] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_2ND_POS_X                           , 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[7] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_2ND_POS_X + GAME_SCAFFOLD_MOVE_X    , 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[8] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_2ND_POS_X + GAME_SCAFFOLD_MOVE_X * 2, 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[9] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_2ND_POS_X + GAME_SCAFFOLD_MOVE_X * 3, 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	//3列目
	m_apModelSingle[10] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_3RD_POS_X                           , 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[11] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_3RD_POS_X + GAME_SCAFFOLD_MOVE_X    , 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[12] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_3RD_POS_X + GAME_SCAFFOLD_MOVE_X * 2, 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	//4列目
	m_apModelSingle[13] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_4TH_POS_X                           , 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[14] = CModelSingle::Create(D3DXVECTOR3(GAME_SCAFFOLD_4TH_POS_X + GAME_SCAFFOLD_MOVE_X    , 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	//5列目
	m_apModelSingle[15] = CModelSingle::Create(D3DXVECTOR3(0.0f, 0.0f, GAME_SCAFFOLD_POS_Z + GAME_SCAFFOLD_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SCAFFOLD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
#endif

	//ミドル床の生成
	m_apModelSingle[16] = CModelSingle::Create(D3DXVECTOR3(0.0f, 0.0f, GAME_MIDDLE_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FLOOR, NULL, CModelSingle::MODEL_SINGLE_TYPE_MIDDLE1_FLOOR);
	m_apModelSingle[17] = CModelSingle::Create(D3DXVECTOR3(0.0f, 0.0f, GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FLOOR, NULL, CModelSingle::MODEL_SINGLE_TYPE_MIDDLE1_FLOOR);
	m_apModelSingle[18] = CModelSingle::Create(D3DXVECTOR3(0.0f, 0.0f, GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FLOOR, NULL, CModelSingle::MODEL_SINGLE_TYPE_MIDDLE2_FLOOR);

	// 棒倒し法によるヒヤヒヤロードの生成
	// 5未満のサイズでは生成できない


	int nDepth = 9;		//縦の数
	int nWidth = 11;	//横の数
	int nWall = 1;		//壁(今回は穴)
	int nPath = 0;		//通れる道

	// 指定サイズで生成し外周を壁にする
	int maze[9][11];
	for (int nCntZ = 0; nCntZ < nDepth; nCntZ++)
	{
		for (int nCntX = 0; nCntX < nWidth; nCntX++)
		{
			if (nCntX == 0 || nCntZ == 0 || nCntX == nWidth - 1 || nCntZ == nDepth - 1)
			{
				maze[nCntZ][nCntX] = nWall; // 外周はすべて壁
			}
			else
			{
				maze[nCntZ][nCntX] = nPath;  // 外周以外は通路
			}
		}
	}

	// 棒を立て、倒す
	for (int nCntZ = 2; nCntZ < nDepth - 1; nCntZ += 2)
	{
		for (int nCntX = 2; nCntX < nWidth - 1; nCntX += 2)
		{
			maze[nCntZ][nCntX] = nWall; // 棒を立てる

										// 倒せるまで繰り返す
			while (true)
			{


				// 1行目のみ上に倒せる
				int nDirection = 0;
				if (nCntZ == 2)
				{
					nDirection = rand() % 4;
				}
				else
				{
					nDirection = rand() % 3;
				}

				// 棒を倒す方向を決める
				int nWallX = nCntX;
				int nWallZ = nCntZ;
				switch (nDirection)
				{
				case 0: // 右
					nWallX++;
					break;
				case 1: // 下
					nWallZ++;
					break;
				case 2: // 左
					nWallX--;
					break;
				case 3: // 上
					nWallZ--;
					break;
				}
				// 壁じゃない場合のみ倒して終了
				if (maze[nWallZ][nWallX] != nWall ||
					(maze[nCntZ][nCntX - 1] == nWall && maze[nCntZ][nCntX + 1] == nWall && maze[nCntZ + 1][nCntX] == nWall))
				{
					maze[nWallZ][nWallX] = nWall;
					break;
				}
			}
		}
	}

	//足場の生成
	int nNumModel = 19;

	for (int nCntZ = 1; nCntZ < nDepth - 2; nCntZ++)
	{
		for (int nCntX = 1; nCntX < nWidth - 2; nCntX++)
		{
			if (maze[nCntZ][nCntX] == nWall)
			{
				m_apModelSingle[nNumModel] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_DISAPPEAR_POS_X + GAME_FLOOR_DISAPPEAR_MOVE_X * (nCntX - 1),
																	GAME_FLOOR_DISAPPEAR_POS_Y,
																	GAME_FLOOR_DISAPPEAR_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * (nCntZ - 1)),
																	D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_DISAPPEAR,
																	NULL, CModelSingle::MODEL_SINGLE_TYPE_UNINIT_FLOOR);
			}
			else if (maze[nCntZ][nCntX] == nPath)
			{
				m_apModelSingle[nNumModel] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_DISAPPEAR_POS_X + GAME_FLOOR_DISAPPEAR_MOVE_X * (nCntX - 1),
																	GAME_FLOOR_DISAPPEAR_POS_Y,
																	GAME_FLOOR_DISAPPEAR_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * (nCntZ - 1)),
																	D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_DISAPPEAR,
																	NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
			}
		}
		nNumModel++;
	}



	//ゴール床の生成
	m_apModelSingle[67] = CModelSingle::Create(D3DXVECTOR3(0.0f, GAME_GOAL_FLOOR_POS_Y, GAME_GOAL_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_GOAL_FLOOR, NULL, CModelSingle::MODEL_SINGLE_TYPE_GOAL);

	//ゴールの柱の生成
	m_apModelSingle[68] = CModelSingle::Create(D3DXVECTOR3(-GAME_POLE_POS_X, GAME_GOAL_FLOOR_POS_Y, GAME_GOAL_FLOOR_POS_Z - 99.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_GOAL_POLE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[69] = CModelSingle::Create(D3DXVECTOR3( GAME_POLE_POS_X, GAME_GOAL_FLOOR_POS_Y, GAME_GOAL_FLOOR_POS_Z - 99.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_GOAL_POLE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//ゴールの旗の生成
	m_apModelSingle[70] = CModelSingle::Create(D3DXVECTOR3(0.0f, GAME_GOAL_FLOOR_POS_Y + 200.0f, GAME_GOAL_FLOOR_POS_Z - 99.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_GOAL_FLAG, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//ゴールテープの生成
	m_pScene3D = CScene3D::Create(D3DXVECTOR3(0.0f, GAME_GOAL_FLOOR_POS_Y + 10.0f, GAME_GOAL_FLOOR_POS_Z - 87.0f), D3DXVECTOR3(600.0f, 0.0f, 50.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CScene3D::PRIORITY_MODEL);
	m_pScene3D->BindTexture(CManager::GetTexture()->GetTexture(CTexture::TEX_TYPE_GOAL_TAPE));

	//スタートとゴールの後ろ柵の生成
	m_apModelSingle[71] = CModelSingle::Create(D3DXVECTOR3(0.0f,                         GAME_FENCE_POS_Y, GAME_START_FLOOR_POS_Z - 100.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_BACKFENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[72] = CModelSingle::Create(D3DXVECTOR3(0.0f, GAME_GOAL_FLOOR_POS_Y + GAME_FENCE_POS_Y, GAME_GOAL_FLOOR_POS_Z  + 100.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_BACKFENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//スタートとゴールのサイド柵の生成
	m_apModelSingle[73] = CModelSingle::Create(D3DXVECTOR3(-GAME_FENCE_POS_X,                         GAME_FENCE_POS_Y, GAME_START_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_SIDEFENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[74] = CModelSingle::Create(D3DXVECTOR3( GAME_FENCE_POS_X,                         GAME_FENCE_POS_Y, GAME_START_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_SIDEFENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[75] = CModelSingle::Create(D3DXVECTOR3(-GAME_FENCE_POS_X, GAME_GOAL_FLOOR_POS_Y + GAME_FENCE_POS_Y, GAME_GOAL_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_SIDEFENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[76] = CModelSingle::Create(D3DXVECTOR3( GAME_FENCE_POS_X, GAME_GOAL_FLOOR_POS_Y + GAME_FENCE_POS_Y, GAME_GOAL_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_SIDEFENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//ミドル柵の生成
	m_apModelSingle[77] = CModelSingle::Create(D3DXVECTOR3(-GAME_FENCE_POS_X, GAME_FENCE_POS_Y, GAME_MIDDLE_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[78] = CModelSingle::Create(D3DXVECTOR3( GAME_FENCE_POS_X, GAME_FENCE_POS_Y, GAME_MIDDLE_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[79] = CModelSingle::Create(D3DXVECTOR3(-GAME_FENCE_POS_X, GAME_FENCE_POS_Y, GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[80] = CModelSingle::Create(D3DXVECTOR3( GAME_FENCE_POS_X, GAME_FENCE_POS_Y, GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[81] = CModelSingle::Create(D3DXVECTOR3(-GAME_FENCE_POS_X, GAME_FENCE_POS_Y, GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[82] = CModelSingle::Create(D3DXVECTOR3( GAME_FENCE_POS_X, GAME_FENCE_POS_Y, GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FENCE, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//氷の床の生成
	switch (m_icePattern)
	{
	case ICE_FLOOR_PATTERN_1:
#if(1)
		//1列目
		//m_apModelSingle[85] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[86] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X    , 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[87] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[88] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[89] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[90] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[91] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[92] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//2列目
		m_apModelSingle[93] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[94] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[95] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[96] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[97] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[98] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[99] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[100] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//3列目
		m_apModelSingle[101] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[102] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[103] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[104] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[105] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[106] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[107] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[108] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//4列目
		m_apModelSingle[109] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[110] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[111] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[112] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[113] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[114] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[115] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[116] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//5列目
		m_apModelSingle[117] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[118] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[119] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[120] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[121] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[122] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[123] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[124] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//6列目
		//m_apModelSingle[125] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[126] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[127] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[128] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[129] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[130] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[131] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[132] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//7列目
		m_apModelSingle[133] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[134] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[135] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[136] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[137] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[138] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[139] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[140] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//8列目
		//m_apModelSingle[141] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[142] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X    , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[143] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[144] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[145] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[146] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[147] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[148] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//9列目
		m_apModelSingle[149] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[150] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[151] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[152] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[153] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[154] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[155] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[156] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//10列目
		//m_apModelSingle[157] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[158] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[159] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[160] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[161] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[162] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[163] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[164] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		break;
#endif
	case ICE_FLOOR_PATTERN_2:
#if(1)
		//1列目
		m_apModelSingle[85] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[86] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X    , 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[87] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[88] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[89] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[90] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[91] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[92] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//2列目
		//m_apModelSingle[93] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[94] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[95] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[96] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[97] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[98] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[99] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[100] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//3列目
		m_apModelSingle[101] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[102] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[103] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[104] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[105] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[106] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[107] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[108] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//4列目
		m_apModelSingle[109] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[110] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[111] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[112] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[113] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[114] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[115] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[116] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//5列目
		m_apModelSingle[117] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[118] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[119] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[120] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[121] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[122] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[123] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[124] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//6列目
		m_apModelSingle[125] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[126] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[127] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[128] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[129] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[130] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[131] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[132] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//7列目
		m_apModelSingle[133] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[134] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[135] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[136] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[137] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[138] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[139] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[140] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//8列目
		m_apModelSingle[141] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[142] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X    , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[143] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[144] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[145] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[146] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[147] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[148] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//9列目
		m_apModelSingle[149] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[150] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[151] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[152] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[153] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[154] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[155] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[156] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//10列目
		m_apModelSingle[157] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X                            , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[158] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[159] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[160] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[161] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[162] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[163] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[164] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		break;
#endif
	case ICE_FLOOR_PATTERN_3:
#if(1)
		//1列目
		m_apModelSingle[85] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[86] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[87] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[88] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[89] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[90] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[91] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[92] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//2列目
		m_apModelSingle[93] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[94] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[95] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[96] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[97] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[98] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[99] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[100] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//3列目
		m_apModelSingle[101] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[102] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[103] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[104] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[105] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[106] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[107] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[108] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//4列目
		m_apModelSingle[109] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[110] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[111] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[112] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[113] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[114] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[115] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[116] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 3), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//5列目
		m_apModelSingle[117] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[118] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[119] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[120] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[121] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[122] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[123] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[124] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 4), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//6列目
		m_apModelSingle[125] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[126] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[127] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[128] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[129] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[130] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[131] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[132] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 5), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//7列目
		m_apModelSingle[133] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[134] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[135] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[136] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[137] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[138] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[139] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[140] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 6), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//8列目
		m_apModelSingle[141] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[142] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X    , 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[143] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[144] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[145] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[146] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[147] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[148] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 7), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//9列目
		//m_apModelSingle[149] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[150] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[151] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[152] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[153] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[154] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[155] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[156] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 8), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//10列目
		m_apModelSingle[157] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[158] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[159] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 2, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[160] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 3, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		//m_apModelSingle[161] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 4, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[162] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 5, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[163] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 6, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		m_apModelSingle[164] = CModelSingle::Create(D3DXVECTOR3(GAME_FLOOR_ICE_POS_X + GAME_FLOOR_ICE_MOVE_X * 7, 0.0f, GAME_FLOOR_ICE_POS_Z + GAME_FLOOR_DISAPPEAR_MOVE_Z * 9), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_FLOOR_ICE, NULL, CModelSingle::MODEL_SINGLE_TYPE_ICE_FLOOR);
		break;
#endif
	default:
		break;
	}

	//上下壁と柱の生成
#if(1)
	//1列目
	m_apModelSingle[165] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X                              ,   0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_DOWN_WALL);
	m_apModelSingle[166] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X    ,-110.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_UP_WALL);
	m_apModelSingle[167] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X * 2,   0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_DOWN_WALL);
	m_apModelSingle[168] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X * 3,-110.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_UP_WALL);
	m_apModelSingle[169] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X                              , 0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[170] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X    , 0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[171] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 2, 0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[172] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 3, 0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[173] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 4, 0.0f, GAME_WALL_UPDOWN_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	//2列目
	m_apModelSingle[174] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X                              ,-110.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_UP_WALL);
	m_apModelSingle[175] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X    ,   0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_DOWN_WALL);
	m_apModelSingle[176] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X * 2,-110.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_UP_WALL);
	m_apModelSingle[177] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X * 3,   0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_DOWN_WALL);
	m_apModelSingle[178] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X                              , 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[179] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X    , 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[180] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 2, 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[181] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 3, 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[182] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 4, 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	//3列目
	m_apModelSingle[183] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X                              ,   0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_DOWN_WALL);
	m_apModelSingle[184] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X    ,-110.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_UP_WALL);
	m_apModelSingle[185] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X * 2,   0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_DOWN_WALL);
	m_apModelSingle[186] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_UPDOWN_POS_X + GAME_WALL_UPDOWN_MOVE_X * 3,-110.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_UPDOWN, NULL, CModelSingle::MODEL_SINGLE_TYPE_UP_WALL);
	m_apModelSingle[187] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X                              , 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[188] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X    , 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[189] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 2, 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[190] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 3, 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[191] = CModelSingle::Create(D3DXVECTOR3(GAME_WALL_PILLAR_POS_X + GAME_WALL_PILLAR_MOVE_X * 4, 0.0f, GAME_WALL_UPDOWN_POS_Z + GAME_WALL_UPDOWN_MOVE_Z * 2), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_WALL_PILLAR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
#endif

	//ヒヤヒヤロード後のミドル床
	m_apModelSingle[192] = CModelSingle::Create(D3DXVECTOR3(0.0f, 0.0f, 2230.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_TUTORIAL_MIDDLE_FLOOR, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//バネの生成
	m_apModelSingle[193] = CModelSingle::Create(D3DXVECTOR3(-GAME_SPRING_POS_X, 10.0f, GAME_SPRING_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SPRING, NULL, CModelSingle::MODEL_SINGLE_TYPE_SPRING);
	m_apModelSingle[193] = CModelSingle::Create(D3DXVECTOR3(   0.0f, 10.0f, GAME_SPRING_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SPRING, NULL, CModelSingle::MODEL_SINGLE_TYPE_SPRING);
	m_apModelSingle[193] = CModelSingle::Create(D3DXVECTOR3(GAME_SPRING_POS_X, 10.0f, GAME_SPRING_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_GAME_SPRING, NULL, CModelSingle::MODEL_SINGLE_TYPE_SPRING);

	//雲の生成
	m_apModelSingle[194] = CModelSingle::Create(D3DXVECTOR3(-900.0f, -350.0f, GAME_GOAL_FLOOR_POS_Z - 200.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[195] = CModelSingle::Create(D3DXVECTOR3(900.0f, -300.0f, GAME_GOAL_FLOOR_POS_Z - 300.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[196] = CModelSingle::Create(D3DXVECTOR3(-1200.0f, -400.0f, 0.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[197] = CModelSingle::Create(D3DXVECTOR3(1400.0f, -450.0f, 0.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[198] = CModelSingle::Create(D3DXVECTOR3(500.0f, -350.0f, 600.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[199] = CModelSingle::Create(D3DXVECTOR3(1000.0f, -600.0f, 700.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[200] = CModelSingle::Create(D3DXVECTOR3(-500.0f, -350.0f, 200.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[201] = CModelSingle::Create(D3DXVECTOR3(1200.0f, -350.0f, 500.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[204] = CModelSingle::Create(D3DXVECTOR3(700.0f, -100.0f, -3000.0f), D3DXVECTOR3(0.0f, 180.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[205] = CModelSingle::Create(D3DXVECTOR3(-700.0f, -200.0f, -3600.0f), D3DXVECTOR3(0.0f, 180.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[206] = CModelSingle::Create(D3DXVECTOR3(-1600.0f, -150.0f, -4000.0f), D3DXVECTOR3(0.0f, 180.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[208] = CModelSingle::Create(D3DXVECTOR3(1600.0f, -200.0f, -3000.0f), D3DXVECTOR3(0.0f, 180.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[209] = CModelSingle::Create(D3DXVECTOR3(400.0f, -300.0f, -2800.0f), D3DXVECTOR3(0.0f, 180.0f, 0.0f), CXload::X_TYPE_CLOUD, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//気球の生成
	m_apModelSingle[202] = CModelSingle::Create(D3DXVECTOR3(-900.0f, -300.0f, GAME_GOAL_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_BALLOON, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[203] = CModelSingle::Create(D3DXVECTOR3(400.0f, 200.0f, GAME_GOAL_FLOOR_POS_Z), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_BALLOON, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[207] = CModelSingle::Create(D3DXVECTOR3(100.0f, 0.0f, -4500.0f), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_BALLOON, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//チェックポイントの生成
	m_apModelSingle[210] = CModelSingle::Create(D3DXVECTOR3(GAME_CHECKPOINT01_POS_X, GAME_CHECKPOINT01_POS_Y, GAME_CHECKPOINT01_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_CHECKPOINT, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[211] = CModelSingle::Create(D3DXVECTOR3(-GAME_CHECKPOINT01_POS_X, GAME_CHECKPOINT01_POS_Y, GAME_CHECKPOINT01_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_CHECKPOINT, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	m_apModelSingle[213] = CModelSingle::Create(D3DXVECTOR3(GAME_CHECKPOINT02_POS_X, GAME_CHECKPOINT02_POS_Y, GAME_CHECKPOINT02_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_CHECKPOINT, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);
	m_apModelSingle[214] = CModelSingle::Create(D3DXVECTOR3(-GAME_CHECKPOINT02_POS_X, GAME_CHECKPOINT02_POS_Y, GAME_CHECKPOINT02_POS_Z), D3DXVECTOR3(0.0f, 0.0f, 0.0f), CXload::X_TYPE_CHECKPOINT, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//飛行船の生成
	m_apModelSingle[215] = CModelSingle::Create(D3DXVECTOR3(0.0f, -300.0f, GAME_GOAL_FLOOR_POS_Z + 500), D3DXVECTOR3(0.0f, 90.0f, 0.0f), CXload::X_TYPE_AIRSHIP, NULL, CModelSingle::MODEL_SINGLE_TYPE_NONE);

	//プレイヤーの生成
	for (int nCntPlayer = 0; nCntPlayer < MAX_PLAYER; nCntPlayer++)
	{
		m_apPlayer[nCntPlayer] = CPlayer::Create(D3DXVECTOR3(-GAME_PLAYER_INITCREATE_POS_X + (GAME_PLAYER_INITCREATE_WIDTH * nCntPlayer),
			GAME_PLAYER_CREATE_POS_Y,
			GAME_PLAYER_INITCREATE_POS_Z /* +4000 */),
			D3DXVECTOR3(0.0f, D3DX_PI, 0.0f), nCntPlayer);
	}

	//タイムの生成
	m_pTime = CTimer::Create(D3DXVECTOR3(SCREEN_WIDTH / 2.0f - 10.0f, TIME_POLIGON_POSY, 0.0f), D3DXVECTOR3(TIME_POLYGON_WIDTH, TIME_POLYGON_HEIGHT, 0.0f));

	//ポーズの生成
	m_pPause = CPause::Create(D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f));

	return S_OK;
}

//================================================
//終了処理
//================================================
void CGame01::Uninit(void)
{
	//サウンド取得処理
	CSound *pSound;
	pSound = CManager::GetSound();

	//今再生されてるサウンドを止める
	pSound->Stop();
	//オブジェクトの破棄
	Release();

	//プレイヤーの破棄
	for (int nCntPlayer = 0; nCntPlayer < MAX_PLAYER; nCntPlayer++)
	{
		if (m_apPlayer[nCntPlayer] != NULL)
		{
			m_apPlayer[nCntPlayer]->Uninit();
			delete m_apPlayer[nCntPlayer];
			m_apPlayer[nCntPlayer] = NULL;
		}
	}
}

//================================================
//更新処理
//================================================
void CGame01::Update(void)
{
	//キーボード取得処理
	CInputKeyboard *pInputKeyboard;
	pInputKeyboard = CManager::GetInputKeyboard();

	//フェード取得処理
	CFade *pFade;
	pFade = CManager::GetFade();

	//パッド取得処理
	CInputPadX *pInputPadX;
	pInputPadX = CManager::GetInputPadX();

	//フェーズ処理
	Phase();

	//リスポーン処理
	Respawn();
	
	//ゲーム中だったら
	if (m_bGame == true)
	{
		//タイムを加算していく
		m_pTime->AddTime(1000 / 60);

		if (m_pTime->GetTime() >= 999999)
		{
			m_pTime->SetTime(999999);
			//プレイヤーの破棄
			for (int nCntPlayer = 0; nCntPlayer < MAX_PLAYER; nCntPlayer++)
			{
				if (m_apPlayer[nCntPlayer] != NULL)
				{
					m_apPlayer[nCntPlayer]->Uninit();
					delete m_apPlayer[nCntPlayer];
					m_apPlayer[nCntPlayer] = NULL;
				}
			}
			//フェーズをゲームオーバーにする
			m_phase = GAME01_PHASE_OVER;
		}
	}
}

//================================================
//描画処理
//================================================
void CGame01::Draw(void)
{

}

//================================================
//フェーズ処理
//================================================
void CGame01::Phase(void)
{
	//フェード取得処理
	CFade *pFade;
	pFade = CManager::GetFade();
	
	//プレイヤーの位置取得処理
	D3DXVECTOR3 aPosPlayer[MAX_PLAYER];
	for (int nCntPlayer = 0; nCntPlayer < MAX_PLAYER; nCntPlayer++)
	{
		if (m_apPlayer[nCntPlayer] != NULL)
		{
			aPosPlayer[nCntPlayer] = m_apPlayer[nCntPlayer]->GetPos();
		}
	} 
	//サウンド取得処理
	CSound *pSound;
	pSound = CManager::GetSound();

	//フェーズによる処理分け
	switch (m_phase)
	{
	case GAME01_PHASE_NONE:
		//カウントを増やす
		m_nFrame++;
		if (m_nFrame >= GAME_COUNT_DOWN_COUNT)
		{
			//カウントダウンSE再生
			pSound->Play(CSound::SOUND_LABEL_COUNTDOWN_SE);
			m_apUi[0] = CUi::Create(D3DXVECTOR3(SCREEN_WIDTH / 2.0f, GAME_COUNT_DOWN_POS_Y, 0.0f),
								D3DXVECTOR3(400.0f, 400.0f, 0.0f), PRIORITY_UI, CUi::UI_TYPE_GAME_COUNTDOWN03);
			m_nFrame = 0;
			m_phase = GAME01_PHASE_3;
		}
		break;
	case GAME01_PHASE_3:
		//カウントを増やす
		m_nFrame++;
		if (m_nFrame >= GAME_COUNT_DOWN_COUNT)
		{
			if (m_apUi[0] != NULL)
			{
				m_apUi[0]->Uninit();
				delete m_apUi[0];
				m_apUi[0] = NULL;
			}
			if (m_apUi[0] == NULL)
			{
				//カウントダウンSE再生
				pSound->Play(CSound::SOUND_LABEL_COUNTDOWN_SE);
				m_apUi[0] = CUi::Create(D3DXVECTOR3(SCREEN_WIDTH / 2.0f, GAME_COUNT_DOWN_POS_Y, 0.0f),
									D3DXVECTOR3(400.0f, 400.0f, 0.0f), PRIORITY_UI, CUi::UI_TYPE_GAME_COUNTDOWN02);
			}
			m_nFrame = 0;
			m_phase = GAME01_PHASE_2;
		}
		break;
	case GAME01_PHASE_2:
		//カウントを増やす
		m_nFrame++;
		if (m_nFrame >= GAME_COUNT_DOWN_COUNT)
		{
			if (m_apUi[0] != NULL)
			{
				m_apUi[0]->Uninit();
				delete m_apUi[0];
				m_apUi[0] = NULL;
			}
			if (m_apUi[0] == NULL)
			{
				//カウントダウンSE再生
				pSound->Play(CSound::SOUND_LABEL_COUNTDOWN_SE);
				m_apUi[0] = CUi::Create(D3DXVECTOR3(SCREEN_WIDTH / 2.0f, GAME_COUNT_DOWN_POS_Y, 0.0f),
									D3DXVECTOR3(400.0f, 400.0f, 0.0f), PRIORITY_UI, CUi::UI_TYPE_GAME_COUNTDOWN01);
			}
			m_nFrame = 0;
			m_phase = GAME01_PHASE_1;
		}
		break;
	case GAME01_PHASE_1:
		//カウントを増やす
		m_nFrame++;
		if (m_nFrame >= GAME_COUNT_DOWN_COUNT)
		{
			if (m_apUi[0] != NULL)
			{
				m_apUi[0]->Uninit();
				delete m_apUi[0];
				m_apUi[0] = NULL;
			}
			if (m_apUi[0] == NULL)
			{
				//スタートSE再生
				pSound->Play(CSound::SOUND_LABEL_START_SE);
				m_apUi[0] = CUi::Create(D3DXVECTOR3(SCREEN_WIDTH / 2.0f, SCREEN_HEIGHT / 2.0f, 0.0f), 
								D3DXVECTOR3(800.0f, 800.0f, 0.0f), PRIORITY_UI, CUi::UI_TYPE_GAME_START);
				//ゲーム中にする
				m_bGame = true;

				//BGM再生
				pSound->Play(CSound::SOUND_LABEL_GAME_BGM);
				//音量調整
				pSound->ControllVoice(CSound::SOUND_LABEL_GAME_BGM, 0.5f);
			}
			m_nFrame = 0;
			m_phase = GAME01_PHASE_GO;
		}
		break;
	case GAME01_PHASE_GO:
		
		if (m_nFrame >= GAME_COUNT_DOWN_COUNT)
		{
			if (m_apUi[0] != NULL)
			{
				m_apUi[0]->Uninit();
				delete m_apUi[0];
				m_apUi[0] = NULL;
			}
		}
		else
		{
			//カウントを増やす
			m_nFrame++;
		}
		break;
	case GAME01_PHASE_CLEAR:
		//ゲーム中でなくする
		m_bGame = false;
		//プレイヤーの破棄
		for (int nCntPlayer = 0; nCntPlayer < MAX_PLAYER; nCntPlayer++)
		{
			if (m_apPlayer[nCntPlayer] != NULL)
			{
				m_apPlayer[nCntPlayer]->Uninit();
				delete m_apPlayer[nCntPlayer];
				m_apPlayer[nCntPlayer] = NULL;
			}
		}
		if (m_apUi[0] == NULL)
		{
			if (m_pPause != NULL)
			{
				//ポーズの破棄
				m_pPause->Uninit();
				m_pPause = NULL;
			}
			//BGMを止める
			pSound->Stop(CSound::SOUND_LABEL_GAME_BGM);
			//クリアSE再生
			pSound->Play(CSound::SOUND_LABEL_GAMECLEAR_SE);

			m_apUi[0] = CUi::Create(D3DXVECTOR3(-SCREEN_WIDTH / 2.0f, SCREEN_HEIGHT / 2.0f, 0.0f),
								D3DXVECTOR3(SCREEN_WIDTH, SCREEN_HEIGHT / 2.0f, 0.0f), PRIORITY_UI, CUi::UI_TYPE_GAME_GOAL);
			//ゲーム中にする
			m_bGame = true;
		}

		//カウントを加算
		m_nFrame++;
		if (m_nFrame >= GAME_NEXT_SCENE_COUNT)
		{
			m_nFrame = 0;
			//リザルトに遷移
			if (pFade->GetFade() == CFade::FADE_NONE)
			{
				pFade->SetFade(CManager::MODE_RESULT);
			}
		}
		break;
	case GAME01_PHASE_OVER:
		//ゲーム中でなくする
		m_bGame = false;
		if (m_apUi[0] == NULL)
		{
			if (m_pPause != NULL)
			{
				//ポーズの破棄
				m_pPause->Uninit();
				m_pPause = NULL;
			}
			//BGMを止める
			pSound->Stop(CSound::SOUND_LABEL_GAME_BGM);
			//ゲームオーバーSE再生
			pSound->Play(CSound::SOUND_LABEL_GAMEOVER_SE);

			m_apUi[0] = CUi::Create(D3DXVECTOR3(SCREEN_WIDTH / 2.0f, SCREEN_HEIGHT / 2.0f, 0.0f),
								D3DXVECTOR3(SCREEN_WIDTH, SCREEN_HEIGHT / 2.0f, 0.0f), PRIORITY_UI, CUi::UI_TYPE_GAME_TIME_UP);
		}

		//カウントを加算
		m_nFrame++;
		if (m_nFrame >= GAME_NEXT_SCENE_COUNT)
		{
			m_nFrame = 0;
			//リザルトに遷移
			if (pFade->GetFade() == CFade::FADE_NONE)
			{
				pFade->SetFade(CManager::MODE_MENU);
			}
		}
		break;
	default:
		break;
	}
}

//================================================
//リスポーン処理
//================================================
void CGame01::Respawn(void)
{
	if (m_bGame == true)
	{
		for (int nCntPlayer = 0; nCntPlayer < MAX_PLAYER; nCntPlayer++)
		{
			if (m_apPlayer[nCntPlayer] != NULL)
			{
				//プレイヤーの位置取得処理
				D3DXVECTOR3 posPlayer = m_apPlayer[nCntPlayer]->GetPos();
				//プレイヤーのチェックポイント取得処理
				CPlayer::PLAYER_CHECK_POINT checkPoint = m_apPlayer[nCntPlayer]->GetCheckPoint();
				
				if (posPlayer.y <= PLAYER_UNINIT_POS_Y)
				{
					//プレイヤーの破棄
					if (m_apPlayer[nCntPlayer] != NULL)
					{
						m_apPlayer[nCntPlayer]->Uninit();
						delete m_apPlayer[nCntPlayer];
						m_apPlayer[nCntPlayer] = NULL;
					}
				}

				if (m_apPlayer[nCntPlayer] == NULL)
				{
					switch (checkPoint)
					{
					case CPlayer::PLAYER_CHECK_POINT_NONE:
						//プレイヤーの生成
						m_apPlayer[nCntPlayer] = CPlayer::Create(D3DXVECTOR3(-GAME_PLAYER_INITCREATE_POS_X + (GAME_PLAYER_INITCREATE_WIDTH * nCntPlayer),
																				GAME_PLAYER_CREATE_POS_Y,
																				GAME_PLAYER_INITCREATE_POS_Z),
																	D3DXVECTOR3(0.0f, D3DX_PI, 0.0f), nCntPlayer);
						//チェックポイント設定
						m_apPlayer[nCntPlayer]->SetCheckPoint(CPlayer::PLAYER_CHECK_POINT_NONE);
						break;
					case CPlayer::PLAYER_CHECK_POINT_GAME01_MIDDLE1:
						//プレイヤーの生成
						m_apPlayer[nCntPlayer] = CPlayer::Create(D3DXVECTOR3(-GAME_PLAYER_INITCREATE_POS_X + (GAME_PLAYER_INITCREATE_WIDTH * nCntPlayer),
																				GAME_PLAYER_CREATE_POS_Y,
																				GAME_PLAYER_CHECK_01_POS_Z),
																	D3DXVECTOR3(0.0f, D3DX_PI, 0.0f), nCntPlayer);
						//チェックポイント設定
						m_apPlayer[nCntPlayer]->SetCheckPoint(CPlayer::PLAYER_CHECK_POINT_GAME01_MIDDLE1);
						break;
					case CPlayer::PLAYER_CHECK_POINT_GAME01_MIDDLE2:
						//プレイヤーの生成
						m_apPlayer[nCntPlayer] = CPlayer::Create(D3DXVECTOR3(-GAME_PLAYER_INITCREATE_POS_X + (GAME_PLAYER_INITCREATE_WIDTH * nCntPlayer),
																				GAME_PLAYER_CREATE_POS_Y,
																				GAME_MIDDLE_FLOOR_POS_Z + GAME_MIDDLE_FLOOR_MOVE_Z * 2.0f),
																	D3DXVECTOR3(0.0f, D3DX_PI, 0.0f), nCntPlayer);
						//チェックポイント設定
						m_apPlayer[nCntPlayer]->SetCheckPoint(CPlayer::PLAYER_CHECK_POINT_GAME01_MIDDLE2);
						break;
					default:
						break;
					}
				}
			}
		}
	}
}

//================================================
//フェーズ取得処理
//================================================
CGame01::GAME01_PHASE CGame01::GetPhase(void)
{
	return m_phase;
}

//================================================
//フェーズ設定処理
//================================================
void CGame01::SetPhase(GAME01_PHASE phase)
{
	m_phase = phase;
}

//================================================
//ゲーム中かどうか取得処理
//================================================
bool CGame01::GetGame(void)
{
	return m_bGame;
}